apiVersion: apps/v1          # API group for managing StatefulSets.
kind: StatefulSet            # A special type of Deployment for stateful applications like Kafka.
metadata:
  name: kafka                # Name of the StatefulSet.
spec:
  serviceName: "kafka-headless"       # Headless service name required for network identity (hostname mapping).
  replicas: 1                # Number of Kafka broker replicas.
  selector:
    matchLabels:
      app: kafka             # This selector tells Kubernetes which Pods belong to this StatefulSet.
  template:
    metadata:
      labels:
        app: kafka           # Labels assigned to Pods for selectors and services to use.
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:3.7.0 # Kafka image that supports KRaft mode.
        ports:
        - containerPort: 9092      # Kafka broker port for producers/consumers.
        env:                       # Environment variables for configuring the container.
        - name: KAFKA_KRAFT_MODE
          value: "true"            # Enables KRaft mode (ZooKeeper-free).
        - name: KAFKA_ENABLE_KRAFT
          value: "yes"             # Enables KRaft explicitly.
        - name: KAFKA_CFG_NODE_ID
          value: "1"  
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "broker,controller" # Node will act as both broker and controller.
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"     # Defines which listener acts as the controller communication.
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092,CONTROLLER://:9093" 
          # 9092 is for clients, 9093 is internal controller quorum.
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092"
          # This is what producers/consumers will use to connect to Kafka.
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: "1@kafka-0.kafka-headless.default.svc.cluster.local:9093"
          # Required for KRaft controller quorum. Format: <nodeId@hostname:port>
        - name: KAFKA_CFG_LOG_DIRS
          value: "/bitnami/kafka/data"
          # Where Kafka stores logs (topics, partitions, offsets).
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "false"            # Auto-create topics when a producer sends data.
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "1073741824"  # 1 GB
        - name: KAFKA_REPLICA_FETCH_MAX_BYTES
          value: "1073741824"  # 1 GB
        volumeMounts:
        - name: kafka-storage
          mountPath: /bitnami/kafka # Mount persistent volume to store logs.
      volumes:
      - name: kafka-storage
        persistentVolumeClaim:
          claimName: kafka-pvc     # Use previously defined PVC.
